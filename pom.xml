<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>tvd.microprofile</groupId>
	<artifactId>media</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>media</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- tag::ports[] -->
		<testServerHttpPort>9080</testServerHttpPort>
		<testServerHttpsPort>9443</testServerHttpsPort>
		<!-- end::ports[] -->
		<package.file>${project.build.directory}/${app.name}.zip</package.file>
		<packaging.type>usr</packaging.type>
	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.eclipse.microprofile/microprofile -->
		<dependency>
			<groupId>org.eclipse.microprofile</groupId>
			<artifactId>microprofile</artifactId>
			<version>1.3</version>
			<type>pom</type>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.sun.jersey.contribs/jersey-multipart -->
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>1.19.4</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.38</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
			<version>1.0-R1534292</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- <plugin>
				<groupId>fish.payara.maven.plugins</groupId>
				<artifactId>payara-micro-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>bundle</goal>
							<goal>start</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<payaraVersion>5.182</payaraVersion>
					<useUberJar>true</useUberJar>
					<deployWar>false</deployWar>
					<daemon>${runInBackground}</daemon>
				</configuration>
			</plugin> -->


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<packagingExcludes>pom.xml</packagingExcludes>
				</configuration>
			</plugin>
			<!-- Plugin to run unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<executions>
					<execution>
						<phase>test</phase>
						<id>default-test</id>
						<configuration>
							<excludes>
								<exclude>**/it/**</exclude>
							</excludes>
							<reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>
			<!-- Enable liberty-maven plugin -->
			<plugin>
				<groupId>net.wasdev.wlp.maven.plugins</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<assemblyArtifact>
						<groupId>io.openliberty</groupId>
						<artifactId>openliberty-runtime</artifactId>
						<version>RELEASE</version>
						<type>zip</type>
					</assemblyArtifact>
					<serverName>sampleAppServer</serverName>
					<configFile>src/main/liberty/config/server.xml</configFile>
					<packageFile>${package.file}</packageFile>
					<include>${packaging.type}</include>
					<bootstrapProperties>
						<default.http.port>${testServerHttpPort}</default.http.port>
						<default.https.port>${testServerHttpsPort}</default.https.port>
					</bootstrapProperties>
				</configuration>
				<executions>
					<execution>
						<id>install-liberty</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>install-server</goal>
						</goals>
					</execution>
					<execution>
						<id>package-app</id>
						<phase>package</phase>
						<goals>
							<goal>package-server</goal>
						</goals>
						<configuration>
							<outputDirectory>target/wlp-package</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>install-app</id>
						<phase>package</phase>
						<goals>
							<goal>install-apps</goal>
						</goals>
						<configuration>
							<looseApplication>true</looseApplication>
							<stripVersion>true</stripVersion>
							<installAppPackages>project</installAppPackages>
						</configuration>
					</execution>
					<execution>
						<id>start-server</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-server</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-server</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>adobe</id>
			<name>Adobe</name>
			<url>https://repo.adobe.com/nexus/content/repositories/public/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>


	</repositories>
</project>
